/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'thinh' at '3/28/17 3:44 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    
    maven { url "https://oss.sonatype.org/content/repositories/snapshots"  }
    mavenCentral()
    jcenter()
}

sourceSets {
    main {
        resources {
        //srcDirs = ["Resource"]
            //includes = ["**/*"]
            //srcDirs = ["ASRModel"]
            //includes = ["**/*"]
            srcDirs  "Resource", "ASRModel"
        }
        
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'edu.cmu.sphinx', name: 'sphinx4-core', version:'5prealpha-SNAPSHOT'
    compile group: 'org.apache.xmlrpc', name: 'xmlrpc-client', version: '3.1.3'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

// build jar file
task fatJar(type: Jar) {
	baseName = 'st'
	version = '1.01'
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
        	'Implementation-Version': version,
        	'Main-Class': 'SpeechTranslationSever'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// this task to run project as a java application
task myRun(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main = "SpeechTranslationSever"
  //args "arg1", "arg2"
}
